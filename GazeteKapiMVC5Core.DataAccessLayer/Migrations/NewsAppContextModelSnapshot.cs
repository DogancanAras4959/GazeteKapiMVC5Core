// <auto-generated />
using System;
using GazeteKapiMVC5Core.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GazeteKapiMVC5Core.DataAccessLayer.Migrations
{
    [DbContext(typeof(NewsAppContext))]
    partial class NewsAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.AboutUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("aboutus");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Authorizes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorizeCode")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("AuthorizeName")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("authorize");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Banners", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BannerFrame")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<string>("BannerImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("RotateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RotateId");

                    b.ToTable("banners");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.BannersRotate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RotateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("bannerRotate");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.BrandPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("brand");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("Sorted")
                        .HasColumnType("int");

                    b.Property<int?>("StyleId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isMenu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("StyleId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.CookiePolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("cookie");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BanknoteBuying")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BanknoteSelling")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CrossRateOther")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CrossRateUSD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ForexBuying")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ForexSelling")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("crossorder")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("currencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("currencyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("isRateOrDown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("currency");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.FooterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("footerTypes");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Biography")
                        .HasMaxLength(700)
                        .HasColumnType("nvarchar(700)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Gmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("GuestImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Instagram")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Twitter")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Youtube")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("guest");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.IpAddresCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ipaddresscount");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Magazinebanner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BannerImage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("magazinebanner");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Slug")
                        .HasMaxLength(375)
                        .HasColumnType("nvarchar(375)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("medias");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ColNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCommentActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpenNotifications")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSlide")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTitle")
                        .HasColumnType("bit");

                    b.Property<string>("MetaTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewsContent")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("ParentNewsId")
                        .HasColumnType("int");

                    b.Property<int>("PublishTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PublishedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<int>("Sorted")
                        .HasColumnType("int");

                    b.Property<string>("Sound")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spot")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VideoSlug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUploaded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.Property<bool>("doublePlace")
                        .HasColumnType("bit");

                    b.Property<bool>("fourthPlace")
                        .HasColumnType("bit");

                    b.Property<bool>("isArchive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("GuestId");

                    b.HasIndex("PublishTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("news");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.NewsIp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IpAdressId")
                        .HasColumnType("int");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IpAdressId");

                    b.HasIndex("NewsId");

                    b.ToTable("newsIps");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Privacy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("privacy");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.PublishType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("publishTypes");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.RoleAuthorize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorizeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorizeId");

                    b.HasIndex("RoleId");

                    b.ToTable("roleAuthorize");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.SeoCheckMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<string>("Requirement")
                        .HasMaxLength(220)
                        .HasColumnType("nvarchar(220)");

                    b.Property<int>("SeoScoreId")
                        .HasColumnType("int");

                    b.Property<string>("TypeLevel")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("metaCode")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("SeoScoreId");

                    b.ToTable("seoCheckMeta");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.SeoScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<bool>("IsCreated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqeCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.ToTable("seoScores");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CopyrightText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CopyrightTextTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FooterLogo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("GetAgencyNewsService")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActiveSettings")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrencyService")
                        .HasColumnType("bit");

                    b.Property<bool>("LogIsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("LogSystemErrorActive")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SiteName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SiteSlogan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("setting");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.StreamPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("stream");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.StylePosts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StyleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("stylePosts");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.TagNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.HasIndex("TagId");

                    b.ToTable("tagNews");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Tags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TagName")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("tagNames");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.TermsOfUse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("termsofUse");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailAdress")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("ProfileImage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.members", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("emailAdress")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("jobs")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("nameSurname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("phoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("submitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("members");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.AboutUs", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", "user")
                        .WithMany("aboutus")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Banners", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.BannersRotate", "bannerRotate")
                        .WithMany("bannerList")
                        .HasForeignKey("RotateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bannerRotate");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.BrandPolicy", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", "user")
                        .WithMany("brand")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Categories", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.StylePosts", "stylePosts")
                        .WithMany("categories")
                        .HasForeignKey("StyleId");

                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.FooterType", "typeToCategories")
                        .WithMany("categoriesList")
                        .HasForeignKey("TypeId");

                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", "user")
                        .WithMany("categoriesList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("stylePosts");

                    b.Navigation("typeToCategories");

                    b.Navigation("user");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.CookiePolicy", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", "user")
                        .WithMany("cookie")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Guest", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", "users")
                        .WithMany("guestList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Media", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", "user")
                        .WithMany("media")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.News", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Categories", "categories")
                        .WithMany("newList")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Guest", "guest")
                        .WithMany("newList")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.PublishType", "publishtype")
                        .WithMany("newList")
                        .HasForeignKey("PublishTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", "users")
                        .WithMany("newsList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categories");

                    b.Navigation("guest");

                    b.Navigation("publishtype");

                    b.Navigation("users");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.NewsIp", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.IpAddresCount", "ip")
                        .WithMany("newsIpListIp")
                        .HasForeignKey("IpAdressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.News", "news")
                        .WithMany("newsIpList")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ip");

                    b.Navigation("news");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Privacy", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", "user")
                        .WithMany("privacy")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.PublishType", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", "user")
                        .WithMany("publishTypeList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.RoleAuthorize", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Authorizes", "authroize")
                        .WithMany("roleAuthroizeForRole")
                        .HasForeignKey("AuthorizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Roles", "role")
                        .WithMany("roleAuthroizeForRole")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("authroize");

                    b.Navigation("role");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.SeoCheckMeta", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.SeoScore", "seoScoreToMeta")
                        .WithMany("seoMetas")
                        .HasForeignKey("SeoScoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("seoScoreToMeta");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.SeoScore", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.News", "news")
                        .WithMany("seoScoreNews")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("news");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Settings", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", "user")
                        .WithMany("settings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.StreamPolicy", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", "user")
                        .WithMany("stream")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.TagNews", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.News", "news")
                        .WithMany("tagNewsListForNews")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Tags", "tag")
                        .WithMany("tagNewsForTag")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("news");

                    b.Navigation("tag");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.TermsOfUse", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", "user")
                        .WithMany("termsofuse")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", b =>
                {
                    b.HasOne("GazeteKapiMVC5Core.DataAccessLayer.Models.Roles", "roles")
                        .WithMany("usersForRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("roles");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Authorizes", b =>
                {
                    b.Navigation("roleAuthroizeForRole");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.BannersRotate", b =>
                {
                    b.Navigation("bannerList");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Categories", b =>
                {
                    b.Navigation("newList");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.FooterType", b =>
                {
                    b.Navigation("categoriesList");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Guest", b =>
                {
                    b.Navigation("newList");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.IpAddresCount", b =>
                {
                    b.Navigation("newsIpListIp");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.News", b =>
                {
                    b.Navigation("newsIpList");

                    b.Navigation("seoScoreNews");

                    b.Navigation("tagNewsListForNews");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.PublishType", b =>
                {
                    b.Navigation("newList");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Roles", b =>
                {
                    b.Navigation("roleAuthroizeForRole");

                    b.Navigation("usersForRoles");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.SeoScore", b =>
                {
                    b.Navigation("seoMetas");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.StylePosts", b =>
                {
                    b.Navigation("categories");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Tags", b =>
                {
                    b.Navigation("tagNewsForTag");
                });

            modelBuilder.Entity("GazeteKapiMVC5Core.DataAccessLayer.Models.Users", b =>
                {
                    b.Navigation("aboutus");

                    b.Navigation("brand");

                    b.Navigation("categoriesList");

                    b.Navigation("cookie");

                    b.Navigation("guestList");

                    b.Navigation("media");

                    b.Navigation("newsList");

                    b.Navigation("privacy");

                    b.Navigation("publishTypeList");

                    b.Navigation("settings");

                    b.Navigation("stream");

                    b.Navigation("termsofuse");
                });
#pragma warning restore 612, 618
        }
    }
}
